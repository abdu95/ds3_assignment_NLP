ggarrange(clients_bing_plot, freelancers_bing_plot,
clients_nrc_plot, freelancers_nrc_plot,
clients_afinn_plot, freelancers_afinn_plot,
labels = c("A", "B", "C", "D", "E", "F"),
ncol = 3, nrow = 2)
clients_bing_plot
freelancers_bing_plot
clients_nrc_plot
clients_nrc_plot
clients_nrc_plot
freelancers_nrc_plot
clients_afinn_plot
freelancers_afinn_plot
clients_nrc_plot <- df_stop %>%
inner_join(get_sentiments("nrc")) %>%
count(post_title, post_number, post_date,  sentiment) %>%
pivot_wider(names_from = sentiment, values_from = n, values_fill = 0) %>%
mutate(sentiment = positive - negative) %>%
arrange(sentiment) %>%
ggplot(aes(x=sentiment)) +
geom_histogram(binwidth= 1, colour="black", fill="white") +
geom_vline(aes(xintercept=mean(sentiment, na.rm=T)),   # Ignore NA values for mean
color="red", linetype="dashed", size=1)
freelancers_nrc_plot <- df_f_stop %>%
inner_join(get_sentiments("nrc")) %>%
count(post_title, post_number, post_date,  sentiment) %>%
pivot_wider(names_from = sentiment, values_from = n, values_fill = 0) %>%
mutate(sentiment = positive - negative) %>%
arrange(sentiment) %>%
ggplot(aes(x=sentiment)) +
geom_histogram(binwidth= 1, colour="black", fill="white") +
geom_vline(aes(xintercept=mean(sentiment, na.rm=T)),   # Ignore NA values for mean
color="red", linetype="dashed", size=1)
clients_afinn_plot <- df_stop %>%
inner_join(get_sentiments("afinn")) %>%
group_by(post_title) %>%
summarise(sentiment = sum(value)) %>%
mutate(method = "AFINN") %>%
ggplot(aes(x=sentiment)) +
geom_histogram(binwidth= 1, colour="black", fill="white") +
geom_vline(aes(xintercept=mean(sentiment, na.rm=T)),   # Ignore NA values for mean
color="red", linetype="dashed", size=1)
freelancers_afinn_plot <- df_f_stop %>%
inner_join(get_sentiments("afinn")) %>%
group_by(post_title) %>%
summarise(sentiment = sum(value)) %>%
mutate(method = "AFINN") %>%
filter(sentiment < 60) %>%
ggplot(aes(x=sentiment)) +
geom_histogram(binwidth= 1, colour="black", fill="white") +
geom_vline(aes(xintercept=mean(sentiment, na.rm=T)),   # Ignore NA values for mean
color="red", linetype="dashed", size=1)
ggarrange(clients_bing_plot, freelancers_bing_plot,
clients_nrc_plot, freelancers_nrc_plot,
clients_afinn_plot, freelancers_afinn_plot,
labels = c("A", "B", "C", "D", "E", "F"),
ncol = 2, nrow = 3)
clients_nrc_plot <- df_stop %>%
inner_join(get_sentiments("nrc")) %>%
count(post_title, post_number, post_date,  sentiment) %>%
pivot_wider(names_from = sentiment, values_from = n, values_fill = 0) %>%
mutate(sentiment = positive - negative) %>%
arrange(sentiment) %>%
ggplot(aes(x=sentiment)) +
geom_histogram(binwidth= 1, colour="black", fill="white") +
geom_vline(aes(xintercept=mean(sentiment, na.rm=T)),   # Ignore NA values for mean
color="red", linetype="dashed", size=1)
freelancers_nrc_plot <- df_f_stop %>%
inner_join(get_sentiments("nrc")) %>%
count(post_title, post_number, post_date,  sentiment) %>%
pivot_wider(names_from = sentiment, values_from = n, values_fill = 0) %>%
mutate(sentiment = positive - negative) %>%
arrange(sentiment) %>%
ggplot(aes(x=sentiment)) +
geom_histogram(binwidth= 1, colour="black", fill="white") +
geom_vline(aes(xintercept=mean(sentiment, na.rm=T)),   # Ignore NA values for mean
color="red", linetype="dashed", size=1)
clients_afinn_plot <- df_stop %>%
inner_join(get_sentiments("afinn")) %>%
group_by(post_title) %>%
summarise(sentiment = sum(value)) %>%
mutate(method = "AFINN") %>%
ggplot(aes(x=sentiment)) +
geom_histogram(binwidth= 1, colour="black", fill="white") +
geom_vline(aes(xintercept=mean(sentiment, na.rm=T)),   # Ignore NA values for mean
color="red", linetype="dashed", size=1)
freelancers_afinn_plot <- df_f_stop %>%
inner_join(get_sentiments("afinn")) %>%
group_by(post_title) %>%
summarise(sentiment = sum(value)) %>%
mutate(method = "AFINN") %>%
filter(sentiment < 60) %>%
ggplot(aes(x=sentiment)) +
geom_histogram(binwidth= 1, colour="black", fill="white") +
geom_vline(aes(xintercept=mean(sentiment, na.rm=T)),   # Ignore NA values for mean
color="red", linetype="dashed", size=1)
# ggarrange(clients_bing_plot, freelancers_bing_plot,
#           clients_nrc_plot, freelancers_nrc_plot,
#           clients_afinn_plot, freelancers_afinn_plot,
#           labels = c("A", "B", "C", "D", "E", "F"),
#           ncol = 2, nrow = 3)
plot_grid(clients_bing_plot, freelancers_bing_plot,
align = "h", ncol = 2, rel_widths = c(1/5, 1/5))
clients_nrc_plot <- df_stop %>%
inner_join(get_sentiments("nrc")) %>%
count(post_title, post_number, post_date,  sentiment) %>%
pivot_wider(names_from = sentiment, values_from = n, values_fill = 0) %>%
mutate(sentiment = positive - negative) %>%
arrange(sentiment) %>%
ggplot(aes(x=sentiment)) +
geom_histogram(binwidth= 1, colour="black", fill="white") +
geom_vline(aes(xintercept=mean(sentiment, na.rm=T)),   # Ignore NA values for mean
color="red", linetype="dashed", size=1)
freelancers_nrc_plot <- df_f_stop %>%
inner_join(get_sentiments("nrc")) %>%
count(post_title, post_number, post_date,  sentiment) %>%
pivot_wider(names_from = sentiment, values_from = n, values_fill = 0) %>%
mutate(sentiment = positive - negative) %>%
arrange(sentiment) %>%
ggplot(aes(x=sentiment)) +
geom_histogram(binwidth= 1, colour="black", fill="white") +
geom_vline(aes(xintercept=mean(sentiment, na.rm=T)),   # Ignore NA values for mean
color="red", linetype="dashed", size=1)
clients_afinn_plot <- df_stop %>%
inner_join(get_sentiments("afinn")) %>%
group_by(post_title) %>%
summarise(sentiment = sum(value)) %>%
mutate(method = "AFINN") %>%
ggplot(aes(x=sentiment)) +
geom_histogram(binwidth= 1, colour="black", fill="white") +
geom_vline(aes(xintercept=mean(sentiment, na.rm=T)),   # Ignore NA values for mean
color="red", linetype="dashed", size=1)
freelancers_afinn_plot <- df_f_stop %>%
inner_join(get_sentiments("afinn")) %>%
group_by(post_title) %>%
summarise(sentiment = sum(value)) %>%
mutate(method = "AFINN") %>%
filter(sentiment < 60) %>%
ggplot(aes(x=sentiment)) +
geom_histogram(binwidth= 1, colour="black", fill="white") +
geom_vline(aes(xintercept=mean(sentiment, na.rm=T)),   # Ignore NA values for mean
color="red", linetype="dashed", size=1)
# ggarrange(clients_bing_plot, freelancers_bing_plot,
#           clients_nrc_plot, freelancers_nrc_plot,
#           clients_afinn_plot, freelancers_afinn_plot,
#           labels = c("A", "B", "C", "D", "E", "F"),
#           ncol = 2, nrow = 3)
plot_grid(clients_bing_plot, freelancers_bing_plot,
clients_nrc_plot, freelancers_nrc_plot,
clients_afinn_plot, freelancers_afinn_plot,
align = "h", nrow = 3, rel_heights = c(1/3, 1/3, 1/3))
clients_nrc_plot <- df_stop %>%
inner_join(get_sentiments("nrc")) %>%
count(post_title, post_number, post_date,  sentiment) %>%
pivot_wider(names_from = sentiment, values_from = n, values_fill = 0) %>%
mutate(sentiment = positive - negative) %>%
arrange(sentiment) %>%
ggplot(aes(x=sentiment)) +
geom_histogram(binwidth= 1, colour="black", fill="white") +
geom_vline(aes(xintercept=mean(sentiment, na.rm=T)),   # Ignore NA values for mean
color="red", linetype="dashed", size=1)
freelancers_nrc_plot <- df_f_stop %>%
inner_join(get_sentiments("nrc")) %>%
count(post_title, post_number, post_date,  sentiment) %>%
pivot_wider(names_from = sentiment, values_from = n, values_fill = 0) %>%
mutate(sentiment = positive - negative) %>%
arrange(sentiment) %>%
ggplot(aes(x=sentiment)) +
geom_histogram(binwidth= 1, colour="black", fill="white") +
geom_vline(aes(xintercept=mean(sentiment, na.rm=T)),   # Ignore NA values for mean
color="red", linetype="dashed", size=1)
clients_afinn_plot <- df_stop %>%
inner_join(get_sentiments("afinn")) %>%
group_by(post_title) %>%
summarise(sentiment = sum(value)) %>%
mutate(method = "AFINN") %>%
ggplot(aes(x=sentiment)) +
geom_histogram(binwidth= 1, colour="black", fill="white") +
geom_vline(aes(xintercept=mean(sentiment, na.rm=T)),   # Ignore NA values for mean
color="red", linetype="dashed", size=1)
freelancers_afinn_plot <- df_f_stop %>%
inner_join(get_sentiments("afinn")) %>%
group_by(post_title) %>%
summarise(sentiment = sum(value)) %>%
mutate(method = "AFINN") %>%
filter(sentiment < 60) %>%
ggplot(aes(x=sentiment)) +
geom_histogram(binwidth= 1, colour="black", fill="white") +
geom_vline(aes(xintercept=mean(sentiment, na.rm=T)),   # Ignore NA values for mean
color="red", linetype="dashed", size=1)
# ggarrange(clients_bing_plot, freelancers_bing_plot,
#           clients_nrc_plot, freelancers_nrc_plot,
#           clients_afinn_plot, freelancers_afinn_plot,
#           labels = c("A", "B", "C", "D", "E", "F"),
#           ncol = 2, nrow = 3)
plot_grid(clients_bing_plot, freelancers_bing_plot,
clients_nrc_plot, freelancers_nrc_plot,
clients_afinn_plot, freelancers_afinn_plot,
align = "v", nrow = 3, rel_heights  = c(1/3, 1/3, 1/3))
plot_grid(clients_bing_plot, freelancers_bing_plot,
align = "h", ncol = 2, rel_widths = c(1/5, 1/5))
clients_bing_plot <- ggplot(client_sentiment, aes(x=sentiment)) +
geom_histogram(binwidth= 1, colour="black", fill="white") +
geom_vline(aes(xintercept=mean(sentiment, na.rm=T)),
color="red", linetype="dashed", size=1) +
ggtitle('Sentiment in clients text using bing')
clients_bing_plot
freelancers_bing_df <- df_f_stop %>%
inner_join(get_sentiments("bing")) %>%
count(post_title, post_number, post_date,  sentiment) %>%
pivot_wider(names_from = sentiment, values_from = n, values_fill = 0) %>%
mutate(sentiment = positive - negative) %>%
arrange(sentiment)
freelancers_bing_plot <- ggplot(freelancers_bing_df, aes(x=sentiment)) +
geom_histogram(binwidth= 1, colour="black", fill="white") +
geom_vline(aes(xintercept=mean(sentiment, na.rm=T)),
color="red", linetype="dashed", size=1) +
ggtitle('Sentiment in freelancers text using bing')
freelancers_bing_plot
plot_grid(clients_afinn_plot, freelancers_afinn_plot,
align = "h", ncol = 2, rel_widths = c(1/5, 1/5))
df_unnest
View(df_f_unnest)
df_unnest %>%
count(post_title, word, sort = TRUE)
post_words <- df_unnest %>%
count(post_title, word, sort = TRUE)
View(post_words)
total_words_c <- post_words %>%
group_by(post_title) %>%
summarize(total = sum(n))
View(total_words_c)
rm(post_words)
post_words_c <- df_unnest %>%
count(post_title, word, sort = TRUE)
rm(total_words)
post_words_c <- left_join(post_words_c, total_words_c)
View(post_words_c)
ggplot(total_words_c, aes(n/total)) +
geom_histogram(show.legend = FALSE) +
xlim(NA, 0.0009)
ggplot(post_words_c, aes(n/total)) +
geom_histogram(show.legend = FALSE) +
xlim(NA, 0.0009)
ggplot(post_words_c, aes(n/total)) +
geom_histogram(show.legend = FALSE) +
xlim(NA, 0.0009) +
scale_x_continuous()
ggplot(post_words_c, aes(n/total)) +
geom_histogram(show.legend = FALSE) +
xlim(NA, 0.00001) +
scale_x_continuous()
ggplot(post_words_c, aes(n/total)) +
geom_histogram(show.legend = FALSE) +
scale_x_continuous()
ggplot(post_words_c, aes(n/total)) +
geom_histogram(show.legend = FALSE)
ggplot(post_words_c, aes(n/total)) +
geom_histogram(show.legend = FALSE, binwidth = 0.1)
ggplot(post_words_c, aes(n/total)) +
geom_histogram(show.legend = FALSE)
ggplot(post_words_c, aes(n/total)) +
geom_histogram(show.legend = FALSE) +
scale_x_continuous(limits = c(0, 0.5))
ggplot(post_words_c, aes(n/total)) +
geom_histogram(show.legend = FALSE) +
scale_x_continuous(limits = c(0, 0.3))
ggplot(post_words_c, aes(n/total)) +
geom_histogram(show.legend = FALSE) +
scale_x_continuous(limits = c(0, 0.2))
source('D:/CEU/singer semester/unstructured-text-analysis/Final-Project-DS3/script.R', encoding = 'UTF-8')
post_words_c <- df_unnest %>%
count(post_title, word, sort = TRUE)
total_words_c <- post_words_c %>%
group_by(post_title) %>%
summarize(total = sum(n))
post_words_c <- left_join(post_words_c, total_words_c)
ggplot(post_words_c, aes(n/total)) +
geom_histogram(show.legend = FALSE) +
scale_x_continuous(limits = c(0, 0.2))
post_words_c <- df_unnest %>%
count(post_title, word, sort = TRUE)
total_words_c <- post_words_c %>%
group_by(post_title) %>%
summarize(total = sum(n))
post_words_c <- left_join(post_words_c, total_words_c)
ggplot(post_words_c, aes(n/total)) +
geom_histogram(show.legend = FALSE) +
scale_x_continuous(limits = c(0, 0.2))
post_c_tf_idf <- post_words_c %>%
bind_tf_idf(word, post_title, n)
View(post_c_tf_idf)
post_c_tf_idf %>%
select(-total) %>%
arrange(desc(tf_idf))
library(forcats)
post_c_tf_idf %>%
group_by(post_title) %>%
slice_max(tf_idf, n = 15) %>%
ungroup() %>%
ggplot(aes(tf_idf, fct_reorder(word, tf_idf))) +
geom_col(show.legend = FALSE) +
labs(x = "tf-idf", y = 'NULL')
client_sentiment
View(client_sentiment)
df_stop %>%
inner_join(get_sentiments("bing"))
View(clients_bing_word_counts)
clients_bing_word_counts <- df_stop %>%
inner_join(get_sentiments("bing")) %>%
count(word, sentiment, sort = TRUE) %>%
ungroup()
freelancers_bing_word_counts <- df_f_stop %>%
inner_join(get_sentiments("bing")) %>%
count(word, sentiment, sort = TRUE) %>%
ungroup()
clients_word_counts_g <- clients_bing_word_counts %>%
group_by(sentiment) %>%
slice_max(n, n = 10) %>%
ungroup() %>%
mutate(word = reorder(word, n)) %>%
ggplot(aes(n, word, fill = sentiment)) +
geom_col(show.legend = FALSE) +
facet_wrap(~sentiment, scales = "free_y") +
labs(x = "Contribution to sentiment by clients",
y = NULL)
freelancers_word_counts_g <- freelancers_bing_word_counts %>%
group_by(sentiment) %>%
slice_max(n, n = 10) %>%
ungroup() %>%
mutate(word = reorder(word, n)) %>%
ggplot(aes(n, word, fill = sentiment)) +
geom_col(show.legend = FALSE) +
facet_wrap(~sentiment, scales = "free_y") +
labs(x = "Contribution to sentiment by freelancers",
y = NULL)
plot_grid(clients_word_counts_g, freelancers_word_counts_g,
align = "h", nrow = 2, rel_heights = c(1/5, 1/5))
ap_sentiments %>%
count(sentiment, term, wt = count) %>%
ungroup() %>%
filter(n >= 200) %>%
mutate(n = ifelse(sentiment == "negative", -n, n)) %>%
mutate(term = reorder(term, n)) %>%
ggplot(aes(n, term, fill = sentiment)) +
geom_col() +
labs(x = "Contribution to sentiment", y = NULL)
clients_bing_word_counts %>%
count(sentiment, word, wt = count) %>%
ungroup() %>%
filter(n >= 200) %>%
mutate(n = ifelse(sentiment == "negative", -n, n)) %>%
mutate(word = reorder(word, n)) %>%
ggplot(aes(n, word, fill = sentiment)) +
geom_col() +
labs(x = "Contribution to sentiment", y = NULL)
clients_bing_word_counts %>%
count(sentiment, word, wt = n) %>%
ungroup() %>%
filter(n >= 200) %>%
mutate(n = ifelse(sentiment == "negative", -n, n)) %>%
mutate(word = reorder(word, n)) %>%
ggplot(aes(n, word, fill = sentiment)) +
geom_col() +
labs(x = "Contribution to sentiment", y = NULL)
clients_bing_word_counts %>%
count(sentiment, word, wt = n) %>%
ungroup() %>%
filter(n >= 100) %>%
mutate(n = ifelse(sentiment == "negative", -n, n)) %>%
mutate(word = reorder(word, n)) %>%
ggplot(aes(n, word, fill = sentiment)) +
geom_col() +
labs(x = "Contribution to sentiment", y = NULL)
data("AssociatedPress")
View(AssociatedPress)
View(common_words_clients)
View(df_stop)
df_stop %>%
count(document, word, sort = TRUE) %>%
ungroup()
df_stop %>%
count(post_title, word, sort = TRUE) %>%
ungroup()
what <- df_stop %>%
count(post_title, word, sort = TRUE) %>%
ungroup()
View(what)
rm(what)
clients_word_counts <- df_stop %>%
count(post_title, word, sort = TRUE) %>%
ungroup()
posts_dtm <- clients_word_counts %>%
cast_dtm(post_title, word, n)
posts_lda <- LDA(posts_dtm, k = 4, control = list(seed = 1234))
View(posts_lda)
posts_topics <- tidy(posts_lda, matrix = "beta")
View(posts_topics)
rm(posts_dtm)
posts_dtm_c <- clients_word_counts %>%
cast_dtm(post_title, word, n)
rm(posts_lda)
posts_lda_c <- LDA(posts_dtm_c, k = 4, control = list(seed = 1234))
posts_topics_c <- tidy(posts_lda_c, matrix = "beta")
posts_topics_c
top_terms_c <- posts_topics_c %>%
group_by(topic) %>%
top_n(5, beta) %>%
ungroup() %>%
arrange(topic, -beta)
View(top_terms_c)
post_c_tf_idf
View(post_c_tf_idf)
View(df_unnest)
View(df_stop)
View(df_stop)
View(df_unnest)
View(total_words_c)
post_words_c <- df_stop %>%
count(post_title, word, sort = TRUE)
View(post_words_c)
total_words_c <- post_words_c %>%
group_by(post_title) %>%
summarize(total = sum(n))
View(total_words_c)
post_words_c <- left_join(post_words_c, total_words_c)
View(post_words_c)
View(total_words_c)
post_words_c <- df_stop %>%
count(post_title, word, sort = TRUE)
total_words_c <- post_words_c %>%
group_by(post_title) %>%
summarize(total = sum(n))
knitr::kable(head(total_words_c %>%
count(total, sort = T), 10),
caption = "Top ", align = "lccrr",
table.attr = "style='width:30%;'") %>%
kableExtra::kable_styling()
#  document-word counts
clients_word_counts <- df_stop %>%
count(post_title, word, sort = TRUE) %>%
ungroup()
posts_dtm_c <- clients_word_counts %>%
cast_dtm(post_title, word, n)
posts_lda_c <- LDA(posts_dtm_c, k = 4, control = list(seed = 1234))
posts_topics_c <- tidy(posts_lda_c, matrix = "beta")
top_terms_c <- posts_topics_c %>%
group_by(topic) %>%
top_n(5, beta) %>%
ungroup() %>%
arrange(topic, -beta)
top_terms_c %>%
mutate(term = reorder(term, beta)) %>%
ggplot(aes(term, beta, fill = factor(topic))) +
geom_col(show.legend = FALSE) +
facet_wrap(~ topic, scales = "free") +
coord_flip()
post_c_tf_idf <- post_words_c %>%
bind_tf_idf(word, post_title, n)
post_c_tf_idf %>%
select(-total) %>%
arrange(desc(tf_idf))
View(post_c_tf_idf)
View(post_c_tf_idf)
View(post_words_c)
post_words_c <- df_stop %>%
count(post_title, word, sort = TRUE)
total_words_c <- post_words_c %>%
group_by(post_title) %>%
summarize(total = sum(n))
knitr::kable(head(total_words_c %>%
count(total, sort = T), 10),
caption = "Top ", align = "lccrr",
table.attr = "style='width:30%;'") %>%
kableExtra::kable_styling()
post_words_c <- left_join(post_words_c, total_words_c)
ggplot(post_words_c, aes(n/total)) +
geom_histogram(show.legend = FALSE) +
scale_x_continuous(limits = c(0, 0.2))
post_c_tf_idf <- post_words_c %>%
bind_tf_idf(word, post_title, n)
post_c_tf_idf %>%
select(-total) %>%
arrange(desc(tf_idf))
what <- post_c_tf_idf %>%
select(-total) %>%
arrange(desc(tf_idf))
View(what)
View(post_c_tf_idf)
what <- post_c_tf_idf %>%
arrange(desc(tf_idf))
View(what)
post_c_tf_idf <- post_words_c %>%
bind_tf_idf(word, post_title, n)
knitr::kable(head( post_c_tf_idf %>%
select(-total) %>%
arrange(desc(tf_idf)), 10),
caption = "Top ", align = "lccrr",
table.attr = "style='width:30%;'") %>%
kableExtra::kable_styling()
View(posts_dtm_c)
top_terms_c <- posts_topics_c %>%
group_by(topic) %>%
top_n(5, beta) %>%
ungroup() %>%
arrange(topic, -beta)
top_terms_c %>%
mutate(term = reorder(term, beta)) %>%
ggplot(aes(term, beta, fill = factor(topic))) +
geom_col(show.legend = FALSE) +
facet_wrap(~ topic, scales = "free") +
coord_flip()
